name: Microservices CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test-config-server:
    name: Build and Test Config Server
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check for changes in Config Server
      id: check-config-server
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before.sha }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q '^config-server/'; then
          echo "Changes detected in Config Server. Running the job."
          echo "::set-output name=run_job::true"
        else
          echo "No changes detected in Config Server. Skipping the job."
          echo "::set-output name=run_job::false"
        fi

    - name: Build and test config-server
      run: |
        if [[ "${{ steps.check-config-server.outputs.run_job }}" == "true" ]]; then
          cd config-server
          ./mvnw clean package
          ./mvnw test
        else
          echo "Job skipped."
        fi

  build-and-test-eureka-server:
    name: Build and Test Eureka Server
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check for changes in Eureka Server
      id: check-eureka-server
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before.sha }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q '^eureka-server/'; then
          echo "Changes detected in Eureka Server. Running the job."
          echo "::set-output name=run_job::true"
        else
          echo "No changes detected in Eureka Server. Skipping the job."
          echo "::set-output name=run_job::false"
        fi

    - name: Build and test eureka-server
      run: |
        if [[ "${{ steps.check-eureka-server.outputs.run_job }}" == "true" ]]; then
          cd eureka-server
          ./mvnw clean package
          ./mvnw test
        else
          echo "Job skipped."
        fi

  build-and-test-gateway:
    name: Build and Test Gateway
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check for changes in Gateway
      id: check-gateway
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before.sha }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q '^gateway/'; then
          echo "Changes detected in Gateway. Running the job."
          echo "::set-output name=run_job::true"
        else
          echo "No changes detected in Gateway. Skipping the job."
          echo "::set-output name=run_job::false"
        fi

    - name: Build and test gateway
      run: |
        if [[ "${{ steps.check-gateway.outputs.run_job }}" == "true" ]]; then
          cd gateway
          ./mvnw clean package
          ./mvnw test
        else
          echo "Job skipped."
        fi

  build-and-test-skowly-core:
    name: Build and Test Skowly Core
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check for changes in Skowly Core
      id: check-skowly-core
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before.sha }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q '^skowly-core/'; then
          echo "Changes detected in Skowly Core. Running the job."
          echo "::set-output name=run_job::true"
        else
          echo "No changes detected in Skowly Core. Skipping the job."
          echo "::set-output name=run_job::false"
        fi

    - name: Build and test skowly-core
      run: |
        if [[ "${{ steps.check-skowly-core.outputs.run_job }}" == "true" ]]; then
          cd skowly-core
          ./mvnw clean package
          ./mvnw test
        else
          echo "Job skipped."
        fi

  build-and-test-skowly-ui:
    name: Build and Test Skowly UI
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Check for changes in Skowly UI
      id: check-skowly-ui
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before.sha }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q '^skowly-ui/'; then
          echo "Changes detected in Skowly UI. Running the job."
          echo "::set-output name=run_job::true"
        else
          echo "No changes detected in Skowly UI. Skipping the job."
          echo "::set-output name=run_job::false"
        fi

    - name: Build and test skowly-ui
      run: |
        if [[ "${{ steps.check-skowly-ui.outputs.run_job }}" == "true" ]]; then
          cd skowly-ui
          npm install
          npm run test
        else
          echo "Job skipped."
        fi
