name: Skowly full test and build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  skowly-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run maven test for Skowly Core
      run: cd skowly-core && mvn clean verify install
    - name: Publish Skowly Core Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: skowly-core-artifacts
        path: skowly-core/target/*.jar

  eureka-server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run maven test for Eureka Server
      run: cd eureka-server && mvn clean verify install
    - name: Publish Eureka Server Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: eureka-server-artifacts
        path: eureka-server/target/*.jar

  gateway:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run maven test for Gateway
      run: cd gateway && mvn clean verify install
    - name: Publish Gateway Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: gateway-artifacts
        path: gateway/target/*.jar

  config-server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run maven test for Config Server
      run: cd config-server && mvn clean verify install
    - name: Publish Config Server Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: config-server-artifacts
        path: config-server/target/*.jar

  skowly-ui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install Angular CLI
      run: npm install -g @angular/cli
    - name: Install dependencies and run tests for Skowly UI
      run: |
        cd skowly-ui
        npm install
        ng test --watch=false --browsers=ChromeHeadless
        ng build --configuration "production"
    - name: Publish Skowly UI Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: skowly-ui-artifacts
        path: skowly-ui/dist/*
